name: Build the Restaurant service
on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: "ghcr.io/${{ github.repository }}"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Clojure Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.gitlibs
          key: cache-${{ hashFiles('**/deps.edn') }}
          restore-keys: clojure-deps-

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: 1.11.1.1165

      - name: Record Git SHA
        id: vars
        run: echo "git_sha=$(clojure -X:build git/current-tag)" >> $GITHUB_OUTPUT

      - name: Build and containerise the image
        run: |
          clojure -X:build containerise \
          :name \"${{ env.IMAGE_NAME }}\" \
          :tag \"${{ steps.vars.outputs.git_sha }}\"

      - name: Release the image
        run: |
          clojure -X:release push \
          :username \"${{ github.actor }}\" \
          :password \"${{ secrets.GITHUB_TOKEN }}\" \
          :name \"${{ env.IMAGE_NAME }}\" \
          :tag \"${{ steps.vars.outputs.git_sha }}\"

      - name: Add SSH key for production server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.RESTAURANT_HUGHPOWELL_NET_SSH_FINGERPRINT }}" >> /home/runner/.ssh/known_hosts
          echo "${{ secrets.RESTAURANT_HUGHPOWELL_NET_SSH_KEY }}" > /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add /home/runner/.ssh/github_actions

      - name: Deploy to production
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          clojure -X:deploy deploy \
          :env :prod \
          :ssh-user \"debian\" \
          :hostname \"restaurant.hughpowell.net\" \
          :tag \"${{ steps.vars.outputs.git_sha }}\" \
          :image-name \"${{ env.IMAGE_NAME }}\"
